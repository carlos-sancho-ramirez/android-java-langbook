apply plugin: 'com.android.application'
apply plugin: 'de.mannodermaus.android-junit5'

String readCommitHash() {
    def suffix = ''

    def gitExists = exec {
        commandLine 'which', 'git'
        ignoreExitValue true
    }

    if (gitExists.getExitValue() == 0) {
        def so = new ByteArrayOutputStream()
        def gitRevParseResult = exec {
            executable 'git'
            args 'rev-parse', '--short', 'HEAD'
            ignoreExitValue true
            standardOutput = so
        }

        if (gitRevParseResult.exitValue == 0) {
            suffix = '.' + so.toString().trim()
        }
    }

    return suffix
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "sword.langbook3.android"
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0" + readCommitHash()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            // It is expected to find keystore.jks and keystore.properties
            // in the project root in order to generate the signed APK for release
            // They are explicitly excluded from the repository for security reasons.
            storeFile rootProject.file('keystore.jks')

            def keystorePropertiesFile = rootProject.file("keystore.properties")
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':collectionExtensions')
    implementation project(':dbManager')
    implementation project(':dbSerializer')
    implementation project(':dbSchema')
    implementation project(':database')
    implementation "com.github.carlos-sancho-ramirez:lib-java-collections:$COLLECTIONS_VERSION"
}
